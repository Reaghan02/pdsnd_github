Reaghan BriggsThe first SQL query and output goes with slide 3.Create a query that lists each movie, the film company it is classified in, and the number of times it has been rented out.SELECTfilm.title film_title,category.name category_name,SUM(rental.rental_id)FROM filmJOIN film_categoryON film.film_id = film_category.film_idJOIN categoryON category.category_id = film_category.category_idJOIN rentalON rental.rental_id = film.film_idGROUP BY 1,2ORDER BY 3 DESCThe second SQL query and output goes along with slides 4 and 5.Show the top 10 paying customers, how many payments they make on a monthly basis during 2007, and what was the amount of monthly payments.SELECTDATE_PART('YEAR', rental_date) YEARs,DATE_PART('MONTH', rental_date) MONTHs,store.store_id,COUNT(*)FROM rentalJOIN paymentON payment.rental_id = rental.rental_idJOIN staffON staff.staff_id = payment.staff_idJOIN storeON store.store_id = staff.store_idGROUP BY 1,2,3order by 4 descThe following are not queries that were included in the presentation. Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? Make sure to also indicate the category that these family-friendly movies fall into.SELECT f.title, c.name, f.rental_duration, NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile FROM film_category fc JOIN category c ON c.category_id = fc.category_id JOIN film f ON f.film_id = fc.film_id WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music') ORDER BY 3Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each corresponding rental duration category. SELECT t1.name, t1.standard_quartile, COUNT(t1.standard_quartile) FROM (SELECT f.title, c.name , f.rental_duration, NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile FROM film_category fc JOIN category c ON c.category_id = fc.category_id JOIN film f ON f.film_id = fc.film_id WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')) t1 GROUP BY 1, 2 ORDER BY 1, 2